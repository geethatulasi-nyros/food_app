<div class="col-md-5 offset-3 signin-container">
  <div class="d-flex justify-content-center h-100">
    <div class="card sign-in-card">
      <div class="card-header signcard-header">
        <h3>Sign in</h3>
      </div>
      <div class="card-body">
        <%= form_for(resource, as: resource_name, url: session_path(resource_name),id: "new-signin") do |f| %>
          <div class="field input-group form-group">
             <div class="input-group-prepend">
              <span class="input-group-text"><i class="fa fa-user"></i></span>
            </div>
            <%= f.email_field :email, autofocus: true, autocomplete: "email",placeholder: "Email",class: "form-control"  %>
            <div class="error-label"></div>
          </div>

          <div class="field input-group form-group">
             <div class="input-group-prepend">
              <span class="input-group-text"><i class="fa fa-key"></i></span>
            </div>
            <%= f.password_field :password, autocomplete: "current-password",placeholder: "Password",class: 'form-control' %>
            <div class="error-label"></div>
          </div>

          <% if devise_mapping.rememberable? %>
            <div class="row align-items-center remember">
              <%= f.check_box :remember_me %>
              <%= f.label :remember_me,id:"remember-text" %>
            </div>
          <% end %>

          <div class="actions">
            <%= f.submit "Sign in",class: 'btn float-right login_btn' %>
          </div>
        <% end %>
      </div>
      <div class="card-footer">
        <%= render "devise/shared/links" %>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
  $("#new_user").validate({
    rules:{
      "user[email]":{
        required:true,
      },
      "user[password]":{
        required:true
      }
    },
    messages:{
      "user[email]":{
        required:"Email is required"
      },
      "user[password]":{
        required:"password is required"
      }
    },
    errorElement : 'span',
    errorLabelContainer: '.errorTxt',
    errorPlacement: function(error,element) {
      error.appendTo(element.next());
    },
  })
</script>

 